{
	"info": {
		"_postman_id": "12970831-3682-438c-bb5f-b6f89381bfc0",
		"name": "Peercoin",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "register",
			"item": [
				{
					"name": "Register",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"USERNAME\",Math.random().toString().substr(2, 9));",
									"pm.collectionVariables.set(\"PASSWORD\", Math.random().toString().substr(2, 9));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"ensure success\", function() {",
									"    pm.response.to.have.status(200);",
									"    pm.response.to.be.ok;",
									"    pm.expect(pm.response.body === \"{\\\"success\\\": \\\"successfully registered user\\\"}\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"{{USERNAME}}\",\n    \"password\": \"{{PASSWORD}}\",\n    \"confirmPassword\": \"{{PASSWORD}}\"\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{host}}/register",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"register"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "login",
			"item": [
				{
					"name": "Register",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"USERNAME\",Math.random().toString().substr(2, 9));",
									"pm.collectionVariables.set(\"PASSWORD\", Math.random().toString().substr(2, 9));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"ensure success\", function() {",
									"    pm.response.to.have.status(200);",
									"    pm.response.to.be.ok;",
									"    pm.expect(pm.response.body === \"{\\\"success\\\": \\\"successfully registered user\\\"}\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"{{USERNAME}}\",\n    \"password\": \"{{PASSWORD}}\",\n    \"confirmPassword\": \"{{PASSWORD}}\"\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{host}}/register",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"ensure success\", function() {",
									"    pm.response.to.have.status(200);",
									"    pm.response.to.be.ok;",
									"    pm.collectionVariables.set(\"TOKEN\", pm.response.json()['token']);",
									"});",
									"pm.test(\"ensure contains token\", function() {",
									"    pm.expect(pm.response.json()).to.have.property(\"token\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"{{USERNAME}}\",\n    \"password\": \"{{PASSWORD}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{host}}/token",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"token"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Orders",
			"item": [
				{
					"name": "Register",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"USERNAME\",Math.random().toString().substr(2, 9));",
									"pm.collectionVariables.set(\"PASSWORD\", Math.random().toString().substr(2, 9));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"ensure success\", function() {",
									"    pm.response.to.have.status(200);",
									"    pm.response.to.be.ok;",
									"    pm.expect(pm.response.body === \"{\\\"success\\\": \\\"successfully registered user\\\"}\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"{{USERNAME}}\",\n    \"password\": \"{{PASSWORD}}\",\n    \"confirmPassword\": \"{{PASSWORD}}\"\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{host}}/register",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"ensure success\", function() {",
									"    pm.response.to.have.status(200);",
									"    pm.collectionVariables.set(\"TOKEN\", pm.response.json()['token']);",
									"});",
									"",
									"pm.test(\"ensure contains token\", function() {",
									"    pm.expect(pm.response.json()).to.have.property(\"token\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"{{USERNAME}}\",\n    \"password\": \"{{PASSWORD}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{host}}/token",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Orders",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"response is ok\", function() {",
									"    pm.response.to.be.ok;",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Bearer",
								"value": "{{TOKEN}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{host}}/api/order",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"order"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Order",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"response is ok\", function() {",
									"    pm.response.to.be.ok;",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Bearer",
								"value": "{{TOKEN}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"crypto\": \"Etherium\",\n  \"paymentMethod\": \"Paypal\",\n  \"currency\": \"Etherium\",\n  \"buy\": \"BUY\",\n  \"removeOnOfferCompletion\": true,\n  \"exchangeRate\": 4205.21,\n  \"min\": 250,\n  \"max\": 350\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{host}}/api/order?type=BUY",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"order"
							],
							"query": [
								{
									"key": "type",
									"value": "BUY"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Orders 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"response is ok\", function() {",
									"    pm.response.to.be.ok;",
									"    pm.response.to.have.status(200);",
									"    pm.collectionVariables.set(\"TMP_ID\", pm.response.json()['buyOrders'][0]['id']);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Bearer",
								"value": "{{TOKEN}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{host}}/api/order",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"order"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Single Order",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"response is ok\", function() {",
									"    pm.response.to.be.ok;",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Bearer",
								"value": "{{TOKEN}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{host}}/api/order/{{TMP_ID}}",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"order",
								"{{TMP_ID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Mark Inactive",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"response is ok\", function() {",
									"    pm.response.to.be.ok;",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"ensure deactivation\", function() {",
									"    pm.expect(pm.response.json()['success'] == \"order deactivated\", \"ensure order was deactivated for the first time\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Bearer",
								"value": "{{TOKEN}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{host}}/api/order/{{TMP_ID}}/markinactive",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"order",
								"{{TMP_ID}}",
								"markinactive"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Offers",
			"item": [
				{
					"name": "Register",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"USERNAME\",Math.random().toString().substr(2, 9));",
									"pm.collectionVariables.set(\"PASSWORD\", Math.random().toString().substr(2, 9));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"ensure success\", function() {",
									"    pm.response.to.have.status(200);",
									"    pm.response.to.be.ok;",
									"    pm.expect(pm.response.body === \"{\\\"success\\\": \\\"successfully registered user\\\"}\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"{{USERNAME}}\",\n    \"password\": \"{{PASSWORD}}\",\n    \"confirmPassword\": \"{{PASSWORD}}\"\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{host}}/register",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"ensure success\", function() {",
									"    pm.response.to.have.status(200);",
									"    pm.collectionVariables.set(\"TOKEN\", pm.response.json()['token']);",
									"});",
									"",
									"pm.test(\"ensure contains token\", function() {",
									"    pm.expect(pm.response.json()).to.have.property(\"token\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"{{USERNAME}}\",\n    \"password\": \"{{PASSWORD}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{host}}/token",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Order",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"response is ok\", function() {",
									"    pm.response.to.be.ok;",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Bearer",
								"value": "{{TOKEN}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"crypto\": \"Etherium\",\n  \"paymentMethod\": \"Paypal\",\n  \"currency\": \"Etherium\",\n  \"buy\": \"BUY\",\n  \"removeOnOfferCompletion\": true,\n  \"exchangeRate\": 4205.21,\n  \"min\": 250,\n  \"max\": 350\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{host}}/api/order?type=BUY",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"order"
							],
							"query": [
								{
									"key": "type",
									"value": "BUY"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Orders",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"response is ok\", function() {",
									"    pm.response.to.be.ok;",
									"    pm.response.to.have.status(200);",
									"    pm.collectionVariables.set(\"TMP_ID\", pm.response.json()['buyOrders'][0]['id']);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Bearer",
								"value": "{{TOKEN}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{host}}/api/order",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"order"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Offer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"response is ok\", function() {",
									"    pm.response.to.be.ok;",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Bearer",
								"value": "{{TOKEN}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"amount\": 277.89,\n  \"type\": \"BUY\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{host}}/api/order/{{TMP_ID}}/offer",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"order",
								"{{TMP_ID}}",
								"offer"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Offers",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"response is ok\", function() {",
									"    pm.response.to.be.ok;",
									"    pm.response.to.have.status(200);",
									"    pm.collectionVariables.set(\"TMP_OFFER_ID\", pm.response.json()['buyOffers'][0]['id']);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Bearer",
								"value": "{{TOKEN}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{host}}/api/offer",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"offer"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Single Offer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"response is ok\", function() {",
									"    pm.response.to.be.ok;",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Bearer",
								"value": "{{TOKEN}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{host}}/api/offer/{{TMP_OFFER_ID}}",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"offer",
								"{{TMP_OFFER_ID}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Wallet",
			"item": [
				{
					"name": "Register",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"USERNAME\",Math.random().toString().substr(2, 9));",
									"pm.collectionVariables.set(\"PASSWORD\", Math.random().toString().substr(2, 9));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"ensure success\", function() {",
									"    pm.response.to.have.status(200);",
									"    pm.response.to.be.ok;",
									"    pm.expect(pm.response.body === \"{\\\"success\\\": \\\"successfully registered user\\\"}\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"{{USERNAME}}\",\n    \"password\": \"{{PASSWORD}}\",\n    \"confirmPassword\": \"{{PASSWORD}}\"\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{host}}/register",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"ensure success\", function() {",
									"    pm.response.to.have.status(200);",
									"    pm.collectionVariables.set(\"TOKEN\", pm.response.json()['token']);",
									"});",
									"",
									"pm.test(\"ensure contains token\", function() {",
									"    pm.expect(pm.response.json()).to.have.property(\"token\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"{{USERNAME}}\",\n    \"password\": \"{{PASSWORD}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{host}}/token",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "get wallet",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Bearer",
								"value": "{{TOKEN}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{host}}/api/wallet",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"wallet"
							]
						}
					},
					"response": []
				},
				{
					"name": "Withdraw (Failure)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Bearer",
								"value": "{{TOKEN}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"address\": \"blah\",\n    \"amount\": 0.01\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{host}}/api/wallet/withdraw/Bitcoin",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"wallet",
								"withdraw",
								"Bitcoin"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "get info",
			"request": {
				"method": "GET",
				"header": [],
				"url": null
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "USERNAME",
			"value": "572760159"
		},
		{
			"key": "PASSWORD",
			"value": "371647411"
		},
		{
			"key": "TOKEN",
			"value": "6c5754ac-ff8f-446b-9735-922209bde0f8"
		},
		{
			"key": "TMP_ID",
			"value": "6020e71f02224131af9830a1"
		},
		{
			"key": "TMP_OFFER_ID",
			"value": "6020e72502224131af9830a2"
		}
	]
}